@import '../shared/variables.less';
@import './createKeyframe.less';

.keyframes(e('@{namespace}-fade-out'), {
    0% {
        @apply opacity-100;
    }
    100% {
        @apply opacity-0;
    }
});
.keyframes(e('@{namespace}-fade-in'), {
    0% {
        @apply opacity-0;
    }
    100% {
        @apply opacity-100;
    }
});

@slideDirection: ltr, rtl, ttb, btt;
.@{namespace}-fade {
    &-enter-active {
        @apply animate-fade-in;
    }
    &-leave-active {
        @apply animate-fade-out;
    }
    &-enter-active,
    &-leave-ative {
        each(range(length(@slideDirection)), {
            @direction: extract(@slideDirection, @value);
            .@{direction} {
                @apply transition-transform;
            }
        });
    }
}
each(range(length(@slideDirection)), {
    @direction: extract(@slideDirection, @value);
    .@{direction} {
        @apply absolute transform-gpu;
    }
    .@{direction} when (@direction = ltr), (@direction = rtl) {
        @apply top-0 bottom-0;
    }
    .@{direction} when(@direction = ttb), (@direction = btt) {
        @apply left-0 right-0;
    }
    .@{direction} when (@direction = ltr) {
        @apply left-0;
    }
    .@{direction} when (@direction = rtl) {
        @apply right-0;
    }
    .@{direction} when (@direction = ttb) {
        @apply top-0 ;
    }
    .@{direction} when (@direction = btt) {
        @apply bottom-0 ;
    }
});
each(range(length(@slideDirection)), {
    @direction: extract(@slideDirection, @value);
    .@{namespace}-fade {
        &-enter-from,
        &-leave-to {
            .@{direction} when(@direction = ltr) {
                --tw-translate-x: -100%;
            }
            .@{direction} when(@direction = rtl) {
                --tw-translate-x: 100%;
            }
            .@{direction} when(@direction = ttb) {
                --tw-translate-y: -100%;
            }
            .@{direction} when(@direction = btt) {
                --tw-translate-y: 100%;
            }
        }
    }
});
