.fade {
    &-enter-active,
    &-leave-active {
        @apply transition-opacity ~"duration-[var(--transition-duration)]" overflow-hidden;
    }
    &-enter-from,
    &-leave-to {
        @apply opacity-0;
    }
    &-enter-to,
    &-leave-from {
        @apply opacity-100;
    }
}
@slideDirection: ltr, rtl, ttb, btt;
each(range(length(@slideDirection)), {
    @direction: extract(@slideDirection, @value);
    .@{direction} {
        @apply transform-gpu;
    }
});
each(range(length(@slideDirection)), {
    @direction: extract(@slideDirection, @value);
    .fade {
        &-enter-active,
        &-leave-active {
            .@{direction} {
                @apply transition-transform ~"duration-[var(--transition-duration)]";
            }
        }
        &-enter-from,
        &-leave-to {
            .@{direction} when(@direction = ltr) {
                --tw-translate-x: -100%;
            }
            .@{direction} when(@direction = rtl) {
                --tw-translate-x: 100%;
            }
            .@{direction} when(@direction = ttb) {
                --tw-translate-y: -100%;
            }
            .@{direction} when(@direction = btt) {
                --tw-translate-y: 100%;
            }
        }
    }
});

.drawer {
    @apply relative overflow-hidden;
    &.slide {
        user-select: none;
    }
    &_swipe {
    }
    &_content {
        @apply absolute z-50 shadow-2xl bg-white max-w-full max-h-full m-auto overflow-auto;
        each(range(length(@slideDirection)), {
            @direction: extract(@slideDirection, @value);
            &.@{direction} when (@direction = ltr), (@direction = rtl) {
                @apply top-0 bottom-0;
            }
            &.@{direction} when(@direction = ttb), (@direction = btt) {
                @apply left-0 right-0;
            }
            &.@{direction} when (@direction = ltr) {
                @apply left-0;
            }
            &.@{direction} when (@direction = rtl) {
                @apply right-0;
            }
            &.@{direction} when (@direction = ttb) {
                @apply top-0 ;
            }
            &.@{direction} when (@direction = btt) {
                @apply bottom-0 ;
            }
        });
    }
}
